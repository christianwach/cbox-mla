{"version":3,"sources":["../bower_components/flowtype/flowtype.js","../assets/scripts/main.js"],"names":["$","fn","flowtype","options","settings","extend","maximum","minimum","maxFont","minFont","fontRatio","changes","el","$el","elw","width","fontBase","fontSize","css","this","each","that","window","resize","jQuery","CPWPST","common","init","finalize","home","about_us","UTIL","fire","func","funcname","args","namespace","undefined","loadEvents","document","body","className","replace","split","i","classnm","ready"],"mappings":"CAYA,SAAAA,GACAA,EAAAC,GAAAC,SAAA,SAAAC,GAIA,GAAAC,GAAAJ,EAAAK,QACAC,QAAA,KACAC,QAAA,EACAC,QAAA,KACAC,QAAA,EACAC,UAAA,IACAP,GAIAQ,EAAA,SAAAC,GACA,GAAAC,GAAAb,EAAAY,GACAE,EAAAD,EAAAE,QACAA,EAAAD,EAAAV,EAAAE,QAAAF,EAAAE,QAAAQ,EAAAV,EAAAG,QAAAH,EAAAG,QAAAO,EACAE,EAAAD,EAAAX,EAAAM,UACAO,EAAAD,EAAAZ,EAAAI,QAAAJ,EAAAI,QAAAQ,EAAAZ,EAAAK,QAAAL,EAAAK,QAAAO,CACAH,GAAAK,IAAA,YAAAD,EAAA,MAKA,OAAAE,MAAAC,KAAA,WAEA,GAAAC,GAAAF,IAEAnB,GAAAsB,QAAAC,OAAA,WAAAZ,EAAAU,KAEAV,EAAAQ,UAGAK,QCnCA,SAAAxB,GAIA,GAAAyB,IAEAC,QACAC,KAAA,aAGAC,SAAA,cAKAC,MACAF,KAAA,aAGAC,SAAA,cAKAE,UACAH,KAAA,eAQAI,GACAC,KAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAH,GACAI,EAAAX,CACAS,GAAAG,SAAAH,EAAA,OAAAA,EACAF,EAAA,KAAAC,EACAD,EAAAA,GAAAI,EAAAH,GACAD,EAAAA,GAAA,kBAAAI,GAAAH,GAAAC,GAEAF,GACAI,EAAAH,GAAAC,GAAAC,IAGAG,WAAA,WAEAP,EAAAC,KAAA,UAGAhC,EAAAoB,KAAAmB,SAAAC,KAAAC,UAAAC,QAAA,KAAA,KAAAC,MAAA,OAAA,SAAAC,EAAAC,GACAd,EAAAC,KAAAa,GACAd,EAAAC,KAAAa,EAAA,cAIAd,EAAAC,KAAA,SAAA,aAKAhC,GAAAuC,UAAAO,MAAAf,EAAAO,YAEAtC,EAAA,QAAAE,YAEAsB","file":"main.js","sourcesContent":["/*\n* FlowType.JS v1.1\n* Copyright 2013-2014, Simple Focus http://simplefocus.com/\n*\n* FlowType.JS by Simple Focus (http://simplefocus.com/)\n* is licensed under the MIT License. Read a copy of the\n* license in the LICENSE.txt file or at\n* http://choosealicense.com/licenses/mit\n*\n* Thanks to Giovanni Difeterici (http://www.gdifeterici.com/)\n*/\n\n(function($) {\n   $.fn.flowtype = function(options) {\n\n// Establish default settings/variables\n// ====================================\n      var settings = $.extend({\n         maximum   : 9999,\n         minimum   : 1,\n         maxFont   : 9999,\n         minFont   : 1,\n         fontRatio : 35\n      }, options),\n\n// Do the magic math\n// =================\n      changes = function(el) {\n         var $el = $(el),\n            elw = $el.width(),\n            width = elw > settings.maximum ? settings.maximum : elw < settings.minimum ? settings.minimum : elw,\n            fontBase = width / settings.fontRatio,\n            fontSize = fontBase > settings.maxFont ? settings.maxFont : fontBase < settings.minFont ? settings.minFont : fontBase;\n         $el.css('font-size', fontSize + 'px');\n      };\n\n// Make the magic visible\n// ======================\n      return this.each(function() {\n      // Context for resize callback\n         var that = this;\n      // Make changes upon resize\n         $(window).resize(function(){changes(that);});\n      // Set changes on load\n         changes(this);\n      });\n   };\n}(jQuery));","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n( function( $ ) {\n\n\t// Use this variable to set up the common and page specific functions. If you\n\t// rename this variable, you will also need to rename the namespace below.\n\tvar CPWPST = {\n\t\t// All pages\n\t\t'common': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on all pages\n\t\t\t},\n\t\t\tfinalize: function() {\n\t\t\t\t// JavaScript to be fired on all pages, after page specific JS is fired\n\t\t\t}\n\t\t},\n\t\t// Home page\n\t\t'home': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on the home page\n\t\t\t},\n\t\t\tfinalize: function() {\n\t\t\t\t// JavaScript to be fired on the home page, after the init JS\n\t\t\t}\n\t\t},\n\t\t// About us page, note the change from about-us to about_us.\n\t\t'about_us': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on the about us page\n\t\t\t}\n\t\t}\n\t};\n\n\t// The routing fires all common scripts, followed by the page specific scripts.\n\t// Add additional events for more control over timing e.g. a finalize event\n\tvar UTIL = {\n\t\tfire: function( func, funcname, args ) {\n\t\t\tvar fire;\n\t\t\tvar namespace = CPWPST;\n\t\t\tfuncname = ( funcname === undefined ) ? 'init' : funcname;\n\t\t\tfire = func !== '';\n\t\t\tfire = fire && namespace[func];\n\t\t\tfire = fire && typeof namespace[func][funcname] === 'function';\n\n\t\t\tif ( fire ) {\n\t\t\t\tnamespace[func][funcname](args);\n\t\t\t}\n\t\t},\n\t\tloadEvents: function() {\n\t\t\t// Fire common init JS\n\t\t\tUTIL.fire( 'common' );\n\n\t\t\t// Fire page-specific init JS, and then finalize JS\n\t\t\t$.each( document.body.className.replace( /-/g, '_' ).split( /\\s+/ ), function( i, classnm ) {\n\t\t\t\tUTIL.fire( classnm );\n\t\t\t\tUTIL.fire( classnm, 'finalize' );\n\t\t\t});\n\n\t\t\t// Fire common finalize JS\n\t\t\tUTIL.fire( 'common', 'finalize' );\n\t\t}\n\t};\n\n\t// Load Events\n\t$( document ).ready( UTIL.loadEvents );\n\n\t$('body').flowtype();\n\n} )( jQuery ); // Fully reference jQuery after this point.\n"],"sourceRoot":"/source/"}